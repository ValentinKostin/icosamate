

               Управление клавиатурой в окне икосаэдра:

Стрелки 
влево, вправо - вращение картины вокруг вертикальной оси на экране,
вверх, вниз - вращение картины вокруг горизонтальной оси на экране,
Shift + стрелки - поворот картины вокруг оси, перпендикулярной экрану

Пробел - постоянное вращение картины в последнем задаваемом стрелками направлении

A,B,C,...,L  - поворот половины икосамата вокруг оси через указанную вершину по часовой стрелке,
если при этом нажат Shift - то против часовой

Ctrl + A,B,C,...,L  - поворот икосамата целиком вокруг оси через указанную вершину по часовой стрелке,
если при этом нажат ещё Shift - то против часовой

R - обратный алгоритм

Alt + сначала одна клавиши для оси, потом (не отпуская Alt) друга клавиша для оси, и эти оси соседние (например K, D) -
отражение алгоритма относительно плоскости, проходящей через указанные оси

Ctrl + Z - undo
Shift + Ctrl + Z - redo

T - включение/отключение стрелочек перемещения центральных элементов
W - включение/отключение стрелочек перемещения и поворота вершинных элементов
Q - включение/отключение осей

F2 - переключение светлой/тёмной темы
                             
Ctrl + S - сохранение текущей картинки в png-файл с названием текущего алгоритма 
в поддиректорию icl (библиотеку алгоритмов)



		Управление программой из командной строки и режимы еёработы

Запуск без параметров - окно икосаэдра

Параметр <полный путь к png-файлу из библиотеки> - открытие окна икосаэдра со скрамблом из этого файла

Параметр scramble=<алгоритм>, например scramble=(BE'B'E)x4 - окно икосаэдра c указанным скрамблом;
скрамбл может содержать повороты вокруг осей (со штрихом - против часовой стрелки), 
повороты икосаэдра вокруг осей целиком (например, MB) 
и скобочки со знаком x и числом, указывающие, что всё что в скобочках повторить указанное число раз.

Параметр scramble_info=<алгоритм> - в лог-файл будет записана информация об алгоритме и его повторениях, 
включая период (p), три числа разницы (d), говорящие о том, насколько не собран икосамат 
(количество не стоящих на своих местах вершинных элементов, количество правильно стоящих, но неправильно 
повёрнутых вершинных элементов, количество не стоящих на своих местах центральных элементов), 
также период (sp) и три числа разницы (sd), если не считать икосамат жёстко привязанным к осям, 
а можно его поворачивать как угодно.

Параметр tree=<длина алгоритма> с подпараметрами, будут рассчитаны и выведены в лог-файл ВСЕ возможные 
алгоритмы указанной длины (поэтому длину не стоит указывать больше 8, а лучше меньше, чем меньше - тем много быстрее
работает программа) и информация о них, включающая три числа разницы (см. ранее параметр scramble_info) 
и их производные. Алгоритм всегда начинается с поворота B 
и симметричные уже рассчитанным относительно поворотов вокруг этой оси алгоритмы выкидываются.
Возможные дополнительные параметры:
with_mults=1 - вывести и все повторы рассчитываемых алгоритмов
add_commutators=1 - добавить также все коммутаторы, составленные из рассчитываемых алгоритмов
with_period=1 - считать периоды всего
with_solving=1 - рассчитывать ещё всю информацию, если не считать икосамат жёстко привязанным к осям, 
а можно его поворачивать как угодно.
См. также для примера файл tree.bat.
Для больших длин алгортма не стоит ставить много дополнительных параметров, т.к. это может сильно замедлить расчёт.

Параметр fill_library_from_file=<имя лог-файла>, создающий в библиотеке картинки для всех алгоритмов из лог-файла 
с указанными характеристиками. Дополнительными параметрами можно указать:
max_alg_len=<максимальная длину алгоритма>
string_diff=<строка разницы>, где строка разницы содержит три числа (см. параметр scramble_info ранее), 
где x указывает любое значение,
например,  string_diff=0,2,x говорит, что надо вывести все алгоритмы, не переставляющие вершинные элементы,
поворачивающие ровно 2 из них и переставляющие любое количество центральных элементов
subdir=<поддиректорию> - писать в указанную поддиректорию библиотеки (директории icl)











